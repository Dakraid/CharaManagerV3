@import 'tailwindcss';
@import 'tw-animate-css';

@custom-variant dark (&:is(.dark *));

:root {
	--card: oklch(1 0 0);
	--card-foreground: oklch(0.141 0.005 285.823);
	--popover: oklch(1 0 0);
	--popover-foreground: oklch(0.141 0.005 285.823);
	--primary: oklch(0.21 0.006 285.885);
	--primary-foreground: oklch(0.985 0 0);
	--secondary: oklch(0.967 0.001 286.375);
	--secondary-foreground: oklch(0.21 0.006 285.885);
	--muted: oklch(0.967 0.001 286.375);
	--muted-foreground: oklch(0.552 0.016 285.938);
	--accent: oklch(0.967 0.001 286.375);
	--accent-foreground: oklch(0.21 0.006 285.885);
	--destructive: oklch(0.577 0.245 27.325);
	--destructive-foreground: oklch(0.577 0.245 27.325);
	--border: oklch(0.92 0.004 286.32);
	--input: oklch(0.92 0.004 286.32);
	--ring: oklch(0.705 0.015 286.067);
	--radius: 0.625rem;
	--background: oklch(1 0 0);
	--foreground: oklch(0.141 0.005 285.823);
}

.dark {
	--background: oklch(0.141 0.005 285.823);
	--foreground: oklch(0.985 0 0);
	--card: oklch(0.141 0.005 285.823);
	--card-foreground: oklch(0.985 0 0);
	--popover: oklch(0.141 0.005 285.823);
	--popover-foreground: oklch(0.985 0 0);
	--primary: oklch(0.985 0 0);
	--primary-foreground: oklch(0.21 0.006 285.885);
	--secondary: oklch(0.274 0.006 286.033);
	--secondary-foreground: oklch(0.985 0 0);
	--muted: oklch(0.274 0.006 286.033);
	--muted-foreground: oklch(0.705 0.015 286.067);
	--accent: oklch(0.274 0.006 286.033);
	--accent-foreground: oklch(0.985 0 0);
	--destructive: oklch(0.396 0.141 25.723);
	--destructive-foreground: oklch(0.637 0.237 25.331);
	--border: oklch(0.274 0.006 286.033);
	--input: oklch(0.274 0.006 286.033);
	--ring: oklch(0.442 0.017 285.786);
}

@theme inline {
	--color-background: var(--background);
	--color-foreground: var(--foreground);
	--color-card: var(--card);
	--color-card-foreground: var(--card-foreground);
	--color-popover: var(--popover);
	--color-popover-foreground: var(--popover-foreground);
	--color-primary: var(--primary);
	--color-primary-foreground: var(--primary-foreground);
	--color-secondary: var(--secondary);
	--color-secondary-foreground: var(--secondary-foreground);
	--color-muted: var(--muted);
	--color-muted-foreground: var(--muted-foreground);
	--color-accent: var(--accent);
	--color-accent-foreground: var(--accent-foreground);
	--color-destructive: var(--destructive);
	--color-destructive-foreground: var(--destructive-foreground);
	--color-border: var(--border);
	--color-input: var(--input);
	--color-ring: var(--ring);

	--radius-sm: calc(var(--radius) - 4px);
	--radius-md: calc(var(--radius) - 2px);
	--radius-lg: var(--radius);
	--radius-xl: calc(var(--radius) + 4px);

	--inset-shadow-md: inset 0 4px 6px -1px rgb(0 0 0 / 0.1);
	--inset-shadow-lg: inset 0 10px 15px -3px rgb(0 0 0 / 0.1);
	--inset-shadow-xl: inset 0 20px 25px -5px rgb(0 0 0 / 0.1);
	--inset-shadow-2xl: inset 0 25px 50px -12px rgb(0 0 0 / 0.25);

	--animate-glow: glow var(--duration) infinite linear;
	@keyframes glow {
		0% {
			background-position: 0 0;
		}
		50% {
			background-position: 100% 100%;
		}
		to {
			background-position: 0 0;
		}
	}
}

@utility step {
	counter-increment: step;

	&:before {
		@apply absolute inline-flex h-9 w-9 items-center justify-center rounded-full border-4 border-background bg-muted text-center -indent-px font-mono text-base font-medium;
		@apply -mt-1 -ml-[50px];
		content: counter(step);
	}
}

@layer base {
	* {
		@apply border-border outline-ring/50;
		@apply z-[1];
	}

	body {
		@apply bg-background text-foreground;
		background-color: color-mix(in oklab, var(--accent) 40%, transparent);
		height: 100vh;
		max-height: 100vh;
		min-height: 100vh;
		width: 100vw;
		max-width: 100vw;
		min-width: 100vw;
		overflow: hidden;
	}

	nav a {
		text-decoration-line: none;

		&:hover {
			color: var(--accent-foreground);
		}
	}

	.menu-fix > div {
		width: 100%;
	}

	.height-fix > div > div {
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.glass-background {
		background-color: color-mix(in oklab, var(--color-white) /* #fff = #ffffff */ 50%, transparent);

		&:is(.dark *) {
			background-color: color-mix(in oklab, var(--color-black) /* #000 = #000000 */ 60%, transparent);
		}
	}
}

html {
	color-scheme: light dark;
}

html.dark {
	color-scheme: dark;
}

html.light {
	color-scheme: light;
}

/* Scrollbar */
::-webkit-scrollbar {
	width: 0.625rem;
}

::-webkit-scrollbar-track {
	background: var(--accent);
	border: 1px solid var(--accent);
	border-radius: calc(var(--radius) - 2px);
}

::-webkit-scrollbar-corner {
	background: transparent;
}

::-webkit-scrollbar-thumb {
	background-color: var(--background);
	border: 1px solid var(--accent);
	border-radius: 9999px;
}

::-webkit-scrollbar-thumb:hover {
	background-color: var(--accent-foreground);
	border-radius: 9999px;
}

/* Censor Utility */
.censor {
	--tw-blur: blur(var(--blur-xl));
	--tw-grayscale: grayscale(100%);
	filter: var(--tw-blur,) var(--tw-grayscale,) !important;
	rotate: 180deg !important;
}

/* Vue Transitions */
.v-enter-active,
.v-leave-active {
	transition: opacity 0.3s ease-in-out;
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
}

.v-enter-from,
.v-leave-to {
	opacity: 0;
}

.list-enter-active,
.list-leave-active {
	transition: all 0.5s ease;
}
.list-enter-from,
.list-leave-to {
	opacity: 0;
	transform: translateY(30px);
}

.fade-enter-active,
.fade-leave-active {
	transition: opacity 0.3s ease-in-out;
	position: absolute;
	width: 100%;
	height: 100%;
}

.fade-enter-from,
.fade-leave-to {
	opacity: 0;
}

/* Layouts */
.Viewport {
	height: 100vh;
	max-height: 100vh;
	min-height: 100vh;
	width: 100vw;
	max-width: 100vw;
	min-width: 100vw;
	overflow: hidden;
}

.Viewport-Layout {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: calc(var(--spacing) * 32) calc(var(--spacing) * 4) 1fr calc(var(--spacing) * 4) calc(var(--spacing) * 8);
	gap: 0;
	grid-auto-flow: row;
	grid-template-areas:
		'Navigation'
		'.'
		'Content'
		'.'
		'Footer';

	@media (width >= 48rem) {
		grid-template-rows: calc(var(--spacing) * 16) calc(var(--spacing) * 4) 1fr calc(var(--spacing) * 4) calc(var(--spacing) * 8);
	}
}

.Viewport-Navigation {
	grid-area: Navigation;
}

.Viewport-Content {
	grid-area: Content;
	overflow: hidden;
}

.Viewport-Footer {
	grid-area: Footer;
}

.Gallery-Layout {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 36px calc(var(--spacing) * 4) 1fr;
	grid-template-areas:
		'Pagination'
		'.'
		'Content';

	@media (width >= 48rem) {
		grid-template-columns: 1fr calc(var(--spacing) * 4) 420px;
		grid-template-rows: 36px calc(var(--spacing) * 4) 1fr;
		grid-template-areas:
			'Pagination Pagination Pagination'
			'. . .'
			'Content . Actions';
	}
}

.Gallery-Layout-NoActions {
	grid-template-areas:
		'Pagination Pagination Pagination'
		'. . .'
		'Content Content Content';
}

.Gallery-Pagination {
	grid-area: Pagination;
}

.Gallery-Content {
	grid-area: Content;
}

.Gallery-Actions {
	grid-area: Content;

	@media (width >= 48rem) {
		grid-area: Actions;
		display: block;
		opacity: 100;
		height: 100%;
	}
}

.Character-Page-Layout {
	display: grid;
	padding: 0 calc(var(--spacing) * 4) calc(var(--spacing) * 4) calc(var(--spacing) * 4);
	grid-template-columns: max-content 1fr;
	grid-template-rows: 1fr;
	grid-template-areas: 'Image Content';
}

.Character-Page-Image {
	grid-area: Image;
}

.Character-Page-Editor {
	grid-area: Content;
}

.Character-Editor-Layout {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: min-content 1fr;
	grid-template-areas: 'Title Selector' 'Content Content';
}

.Character-Editor-Title {
	grid-area: Title;
}

.Character-Editor-Selector {
	grid-area: Selector;
}

.Character-Editor-Content {
	grid-area: Content;
}
