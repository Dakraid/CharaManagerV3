name: Build and Release

env:
    REGISTRY: docker.io
    IMAGE_NAME: netrve/charamanagerv3

on:
    workflow_dispatch:
    push:
        branches: ['main']

jobs:
    Docker:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout the customized branch
              uses: actions/checkout@v4

            - name: Secret Scanning
              uses: trufflesecurity/trufflehog@main
              with:
                  extra_args: --results=verified,unknown

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract branch name
              shell: bash
              run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
              id: extract_branch

            - name: Extract metadata (tags, labels) for the image
              uses: docker/metadata-action@v5.5.1
              id: metadata
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=raw,value=${{ steps.extract_branch.outputs.branch }}

            - name: Build and push
              uses: docker/build-push-action@v5.3.0
              with:
                  context: .
                  platforms: linux/amd64
                  file: Dockerfile
                  push: true
                  tags: ${{ steps.metadata.outputs.tags }}
                  labels: ${{ steps.metadata.outputs.labels }}

    Linux:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Get Short Commit Hash
              id: commit_hash
              run: echo "short_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - name: Secret Scanning
              uses: trufflesecurity/trufflehog@main
              with:
                  extra_args: --results=verified,unknown

            - name: Setup node env
              uses: actions/setup-node@v4
              with:
                  node-version: latest
                  check-latest: true

            - name: Install dependencies
              run: npm ci --quiet

            - name: Run prepare
              run: npm run prepare

            - name: Run linter
              run: npm run lint

            - name: Run build
              run: npm run build

            - uses: actions/upload-artifact@v4
              with:
                  name: Build_Linux_${{ steps.commit_hash.outputs.short_hash }}
                  path: ${{ github.workspace }}/.output
